"use client"

import type React from "react"
import { createContext, useContext, useState, useEffect } from "react"
import { useAuth } from "./auth-context"

export type LanguageCode = "en" | "hi" | "mr" | "ta" | "te" | "kn" | "bn"

export interface LanguageOption {
  code: LanguageCode
  name: string
  flag: string
}

export const languages: LanguageOption[] = [
  { code: "en", name: "English", flag: "ЁЯЗ║ЁЯЗ╕" },
  { code: "hi", name: "Hindi", flag: "ЁЯЗоЁЯЗ│" },
  { code: "mr", name: "Marathi", flag: "ЁЯЗоЁЯЗ│" },
  { code: "ta", name: "Tamil", flag: "ЁЯЗоЁЯЗ│" },
  { code: "te", name: "Telugu", flag: "ЁЯЗоЁЯЗ│" },
  { code: "kn", name: "Kannada", flag: "ЁЯЗоЁЯЗ│" },
  { code: "bn", name: "Bengali", flag: "ЁЯЗоЁЯЗ│" },
]

// Translation dictionaries for each language
const translations: Record<LanguageCode, Record<string, string>> = {
  en: {
    // English is the default language, so we use the keys as values
    dashboard: "Dashboard",
    expenses: "Expenses",
    goals: "Goals",
    challenges: "Challenges",
    settings: "Settings",
    finbot: "FinBot",
    emotion_insights: "Emotion Insights",
    welcome: "Welcome",
    track_finances: "Track your finances and manage your budget",
    income: "Income",
    expenses_label: "Expenses",
    balance: "Balance",
    overview: "Overview",
    charts: "Charts",
    recent: "Recent Expenses",
    accounts: "Accounts",
    expense_breakdown: "Expense Breakdown",
    spending_by_category: "Your spending by category",
    budget_status: "Budget Status",
    financial_status: "Your current financial status",
    quick_actions: "Quick Actions",
    view_all_expenses: "View All Expenses",
    manage_goals: "Manage Goals",
    daily_expenses: "Daily Expenses",
    spending_over_days: "Your spending over the last 30 days",
    monthly_breakdown: "Monthly Breakdown",
    expenses_by_category: "Expenses by category this month",
    category_distribution: "Category Distribution",
    percentage_by_category: "Percentage of spending by category",
    budget_vs_actual: "Budget vs Actual",
    spending_compares: "How your spending compares to your budget",
    recent_expenses: "Recent Expenses",
    latest_transactions: "Your latest transactions",
    update_income: "Update Income",
    scan_receipt: "Scan Receipt",
    add_expense: "Add Expense",
    logout: "Logout",
    profile: "Profile",
    appearance: "Appearance",
    dark_mode: "Dark Mode",
    language: "Language",
    reset_data: "Reset All Data",
    save: "Save",
    cancel: "Cancel",
    amount: "Amount",
    date: "Date",
    category: "Category",
    description: "Description",
    add: "Add",
    edit: "Edit",
    delete: "Delete",
    confirm: "Confirm",
    success: "Success",
    error: "Error",
    loading: "Loading",
    no_data: "No data available",
    search: "Search",
    filter: "Filter",
    sort: "Sort",
    ascending: "Ascending",
    descending: "Descending",
    total: "Total",
    average: "Average",
    minimum: "Minimum",
    maximum: "Maximum",
    today: "Today",
    yesterday: "Yesterday",
    this_week: "This Week",
    last_week: "Last Week",
    this_month: "This Month",
    last_month: "Last Month",
    this_year: "This Year",
    last_year: "Last Year",
    custom_range: "Custom Range",
    apply: "Apply",
    reset: "Reset",
    close: "Close",
    open: "Open",
    next: "Next",
    previous: "Previous",
    first: "First",
    last: "Last",
    page: "Page",
    of: "of",
    items_per_page: "Items per page",
    showing: "Showing",
    to: "to",
    entries: "entries",
    all: "All",
    none: "None",
    select_all: "Select All",
    select_none: "Select None",
    select: "Select",
    selected: "Selected",
    clear: "Clear",
    clear_all: "Clear All",
    clear_selection: "Clear Selection",
    emotion_tracking: "Emotion Tracking",
    how_you_feel: "How do you feel about your finances today?",
    emotion_history: "Emotion History",
    emotion_insights_title: "Emotion Insights",
    emotion_insights_description: "Track your financial emotions and gain insights",
    happy: "Happy",
    sad: "Sad",
    anxious: "Anxious",
    confident: "Confident",
    confused: "Confused",
    stressed: "Stressed",
    excited: "Excited",
    neutral: "Neutral",
    // Add more translations as needed
  },
  hi: {
    dashboard: "рдбреИрд╢рдмреЛрд░реНрдб",
    expenses: "рдЦрд░реНрдЪ",
    goals: "рд▓рдХреНрд╖реНрдп",
    challenges: "рдЪреБрдиреМрддрд┐рдпрд╛рдВ",
    settings: "рд╕реЗрдЯрд┐рдВрдЧреНрд╕",
    finbot: "рдлрд┐рдирдмреЙрдЯ",
    emotion_insights: "рднрд╛рд╡рдирд╛рддреНрдордХ рдЕрдВрддрд░реНрджреГрд╖реНрдЯрд┐",
    welcome: "рд╕реНрд╡рд╛рдЧрдд рд╣реИ",
    track_finances: "рдЕрдкрдиреЗ рд╡рд┐рддреНрдд рдХреЛ рдЯреНрд░реИрдХ рдХрд░реЗрдВ рдФрд░ рдЕрдкрдирд╛ рдмрдЬрдЯ рдкреНрд░рдмрдВрдзрд┐рдд рдХрд░реЗрдВ",
    income: "рдЖрдп",
    expenses_label: "рдЦрд░реНрдЪ",
    balance: "рд╢реЗрд╖ рд░рд╛рд╢рд┐",
    overview: "рдЕрд╡рд▓реЛрдХрди",
    charts: "рдЪрд╛рд░реНрдЯ",
    recent: "рд╣рд╛рд▓ рдХреЗ рдЦрд░реНрдЪ",
    accounts: "рдЦрд╛рддреЗ",
    expense_breakdown: "рдЦрд░реНрдЪ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг",
    spending_by_category: "рд╢реНрд░реЗрдгреА рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдЖрдкрдХрд╛ рдЦрд░реНрдЪ",
    budget_status: "рдмрдЬрдЯ рд╕реНрдерд┐рддрд┐",
    financial_status: "рдЖрдкрдХреА рд╡рд┐рддреНрддреАрдп рд╕реНрдерд┐рддрд┐",
    quick_actions: "рддреНрд╡рд░рд┐рдд рдХрд╛рд░реНрд░рд╡рд╛рдИ",
    view_all_expenses: "рд╕рднреА рдЦрд░реНрдЪ рджреЗрдЦреЗрдВ",
    manage_goals: "рд▓рдХреНрд╖реНрдп рдкреНрд░рдмрдВрдзрд┐рдд рдХрд░реЗрдВ",
    daily_expenses: "рджреИрдирд┐рдХ рдЦрд░реНрдЪ",
    spending_over_days: "рдкрд┐рдЫрд▓реЗ 30 рджрд┐рдиреЛрдВ рдореЗрдВ рдЖрдкрдХрд╛ рдЦрд░реНрдЪ",
    monthly_breakdown: "рдорд╛рд╕рд┐рдХ рд╡рд┐рд╢реНрд▓реЗрд╖рдг",
    expenses_by_category: "рдЗрд╕ рдорд╣реАрдиреЗ рд╢реНрд░реЗрдгреА рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдЦрд░реНрдЪ",
    category_distribution: "рд╢реНрд░реЗрдгреА рд╡рд┐рддрд░рдг",
    percentage_by_category: "рд╢реНрд░реЗрдгреА рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдЦрд░реНрдЪ рдХрд╛ рдкреНрд░рддрд┐рд╢рдд",
    budget_vs_actual: "рдмрдЬрдЯ рдмрдирд╛рдо рд╡рд╛рд╕реНрддрд╡рд┐рдХ",
    spending_compares: "рдЖрдкрдХрд╛ рдЦрд░реНрдЪ рдЖрдкрдХреЗ рдмрдЬрдЯ рд╕реЗ рдХреИрд╕реЗ рддреБрд▓рдирд╛ рдХрд░рддрд╛ рд╣реИ",
    recent_expenses: "рд╣рд╛рд▓ рдХреЗ рдЦрд░реНрдЪ",
    latest_transactions: "рдЖрдкрдХреЗ рдирд╡реАрдирддрдо рд▓реЗрдирджреЗрди",
    update_income: "рдЖрдп рдЕрдкрдбреЗрдЯ рдХрд░реЗрдВ",
    scan_receipt: "рд░рд╕реАрдж рд╕реНрдХреИрди рдХрд░реЗрдВ",
    add_expense: "рдЦрд░реНрдЪ рдЬреЛрдбрд╝реЗрдВ",
    logout: "рд▓реЙрдЧрдЖрдЙрдЯ",
    profile: "рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓",
    appearance: "рдЙрдкрд╕реНрдерд┐рддрд┐",
    dark_mode: "рдбрд╛рд░реНрдХ рдореЛрдб",
    language: "рднрд╛рд╖рд╛",
    reset_data: "рд╕рднреА рдбреЗрдЯрд╛ рд░реАрд╕реЗрдЯ рдХрд░реЗрдВ",
    save: "рд╕рд╣реЗрдЬреЗрдВ",
    cancel: "рд░рджреНрдж рдХрд░реЗрдВ",
    amount: "рд░рд╛рд╢рд┐",
    date: "рддрд╛рд░реАрдЦ",
    category: "рд╢реНрд░реЗрдгреА",
    description: "рд╡рд┐рд╡рд░рдг",
    add: "рдЬреЛрдбрд╝реЗрдВ",
    edit: "рд╕рдВрдкрд╛рджрд┐рдд рдХрд░реЗрдВ",
    delete: "рд╣рдЯрд╛рдПрдВ",
    confirm: "рдкреБрд╖реНрдЯрд┐ рдХрд░реЗрдВ",
    success: "рд╕рдлрд▓рддрд╛",
    error: "рддреНрд░реБрдЯрд┐",
    loading: "рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ",
    no_data: "рдХреЛрдИ рдбреЗрдЯрд╛ рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реИ",
    search: "рдЦреЛрдЬ",
    filter: "рдлрд╝рд┐рд▓реНрдЯрд░",
    sort: "рдХреНрд░рдордмрджреНрдз рдХрд░реЗрдВ",
    ascending: "рдЖрд░реЛрд╣реА",
    descending: "рдЕрд╡рд░реЛрд╣реА",
    total: "рдХреБрд▓",
    average: "рдФрд╕рдд",
    minimum: "рдиреНрдпреВрдирддрдо",
    maximum: "рдЕрдзрд┐рдХрддрдо",
    today: "рдЖрдЬ",
    yesterday: "рдХрд▓",
    this_week: "рдЗрд╕ рд╕рдкреНрддрд╛рд╣",
    last_week: "рдкрд┐рдЫрд▓реЗ рд╕рдкреНрддрд╛рд╣",
    this_month: "рдЗрд╕ рдорд╣реАрдиреЗ",
    last_month: "рдкрд┐рдЫрд▓реЗ рдорд╣реАрдиреЗ",
    this_year: "рдЗрд╕ рд╕рд╛рд▓",
    last_year: "рдкрд┐рдЫрд▓реЗ рд╕рд╛рд▓",
    custom_range: "рдХрд╕реНрдЯрдо рд░реЗрдВрдЬ",
    apply: "рд▓рд╛рдЧреВ рдХрд░реЗрдВ",
    reset: "рд░реАрд╕реЗрдЯ рдХрд░реЗрдВ",
    close: "рдмрдВрдж рдХрд░реЗрдВ",
    open: "рдЦреЛрд▓реЗрдВ",
    next: "рдЕрдЧрд▓рд╛",
    previous: "рдкрд┐рдЫрд▓рд╛",
    first: "рдкрд╣рд▓рд╛",
    last: "рдЕрдВрддрд┐рдо",
    page: "рдкреЗрдЬ",
    of: "рдХрд╛",
    items_per_page: "рдкреНрд░рддрд┐ рдкреЗрдЬ рдЖрдЗрдЯрдо",
    showing: "рджрд┐рдЦрд╛ рд░рд╣рд╛ рд╣реИ",
    to: "рд╕реЗ",
    entries: "рдкреНрд░рд╡рд┐рд╖реНрдЯрд┐рдпрд╛рдВ",
    all: "рд╕рднреА",
    none: "рдХреЛрдИ рдирд╣реАрдВ",
    select_all: "рд╕рднреА рдХрд╛ рдЪрдпрди рдХрд░реЗрдВ",
    select_none: "рдХрд┐рд╕реА рдХрд╛ рдЪрдпрди рди рдХрд░реЗрдВ",
    select: "рдЪрдпрди рдХрд░реЗрдВ",
    selected: "рдЪрдпрдирд┐рдд",
    clear: "рд╕рд╛рдлрд╝ рдХрд░реЗрдВ",
    clear_all: "рд╕рднреА рд╕рд╛рдлрд╝ рдХрд░реЗрдВ",
    clear_selection: "рдЪрдпрди рд╕рд╛рдлрд╝ рдХрд░реЗрдВ",
    emotion_tracking: "рднрд╛рд╡рдирд╛ рдЯреНрд░реИрдХрд┐рдВрдЧ",
    how_you_feel: "рдЖрдЬ рдЖрдк рдЕрдкрдиреЗ рд╡рд┐рддреНрдд рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдХреИрд╕рд╛ рдорд╣рд╕реВрд╕ рдХрд░рддреЗ рд╣реИрдВ?",
    emotion_history: "рднрд╛рд╡рдирд╛ рдЗрддрд┐рд╣рд╛рд╕",
    emotion_insights_title: "рднрд╛рд╡рдирд╛рддреНрдордХ рдЕрдВрддрд░реНрджреГрд╖реНрдЯрд┐",
    emotion_insights_description: "рдЕрдкрдиреА рд╡рд┐рддреНрддреАрдп рднрд╛рд╡рдирд╛рдУрдВ рдХреЛ рдЯреНрд░реИрдХ рдХрд░реЗрдВ рдФрд░ рдЕрдВрддрд░реНрджреГрд╖реНрдЯрд┐ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ",
    happy: "рдЦреБрд╢",
    sad: "рджреБрдЦреА",
    anxious: "рдЪрд┐рдВрддрд┐рдд",
    confident: "рдЖрддреНрдорд╡рд┐рд╢реНрд╡рд╛рд╕реА",
    confused: "рднреНрд░рдорд┐рдд",
    stressed: "рддрдирд╛рд╡рдЧреНрд░рд╕реНрдд",
    excited: "рдЙрддреНрд╕рд╛рд╣рд┐рдд",
    neutral: "рддрдЯрд╕реНрде",
    // Add more translations as needed
  },
  mr: {
    dashboard: "рдбреЕрд╢рдмреЛрд░реНрдб",
    expenses: "рдЦрд░реНрдЪ",
    goals: "рдЙрджреНрджрд┐рд╖реНрдЯреЗ",
    challenges: "рдЖрд╡реНрд╣рд╛рдиреЗ",
    settings: "рд╕реЗрдЯрд┐рдВрдЧреНрдЬ",
    finbot: "рдлрд┐рдирдмреЙрдЯ",
    emotion_insights: "рднрд╛рд╡рдирд┐рдХ рдЕрдВрддрд░реНрджреГрд╖реНрдЯреА",
    welcome: "рд╕реНрд╡рд╛рдЧрдд рдЖрд╣реЗ",
    track_finances: "рдЖрдкрд▓реЗ рд╡рд┐рддреНрдд рдЯреНрд░реЕрдХ рдХрд░рд╛ рдЖрдгрд┐ рдЖрдкрд▓реЗ рдмрдЬреЗрдЯ рд╡реНрдпрд╡рд╕реНрдерд╛рдкрд┐рдд рдХрд░рд╛",
    income: "рдЙрддреНрдкрдиреНрди",
    expenses_label: "рдЦрд░реНрдЪ",
    balance: "рд╢рд┐рд▓реНрд▓рдХ",
    overview: "рдЖрдврд╛рд╡рд╛",
    charts: "рдЪрд╛рд░реНрдЯ",
    recent: "рдЕрд▓реАрдХрдбреАрд▓ рдЦрд░реНрдЪ",
    accounts: "рдЦрд╛рддреА",
    expense_breakdown: "рдЦрд░реНрдЪрд╛рдЪреЗ рд╡рд┐рд╢реНрд▓реЗрд╖рдг",
    spending_by_category: "рд╢реНрд░реЗрдгреАрдиреБрд╕рд╛рд░ рддреБрдордЪрд╛ рдЦрд░реНрдЪ",
    budget_status: "рдмрдЬреЗрдЯ рд╕реНрдерд┐рддреА",
    financial_status: "рддреБрдордЪреА рдЖрд░реНрдерд┐рдХ рд╕реНрдерд┐рддреА",
    quick_actions: "рддреНрд╡рд░рд┐рдд рдХреНрд░рд┐рдпрд╛",
    view_all_expenses: "рд╕рд░реНрд╡ рдЦрд░реНрдЪ рдкрд╣рд╛",
    manage_goals: "рдЙрджреНрджрд┐рд╖реНрдЯреЗ рд╡реНрдпрд╡рд╕реНрдерд╛рдкрд┐рдд рдХрд░рд╛",
    daily_expenses: "рджреИрдирд┐рдХ рдЦрд░реНрдЪ",
    spending_over_days: "рдЧреЗрд▓реНрдпрд╛ 30 рджрд┐рд╡рд╕рд╛рдВрдд рддреБрдордЪрд╛ рдЦрд░реНрдЪ",
    monthly_breakdown: "рдорд╛рд╕рд┐рдХ рд╡рд┐рд╢реНрд▓реЗрд╖рдг",
    expenses_by_category: "рдпрд╛ рдорд╣рд┐рдиреНрдпрд╛рдд рд╢реНрд░реЗрдгреАрдиреБрд╕рд╛рд░ рдЦрд░реНрдЪ",
    category_distribution: "рд╢реНрд░реЗрдгреА рд╡рд┐рддрд░рдг",
    percentage_by_category: "рд╢реНрд░реЗрдгреАрдиреБрд╕рд╛рд░ рдЦрд░реНрдЪрд╛рдЪреА рдЯрдХреНрдХреЗрд╡рд╛рд░реА",
    budget_vs_actual: "рдмрдЬреЗрдЯ рд╡рд┐рд░реБрджреНрдз рдкреНрд░рддреНрдпрдХреНрд╖",
    spending_compares: "рддреБрдордЪрд╛ рдЦрд░реНрдЪ рддреБрдордЪреНрдпрд╛ рдмрдЬреЗрдЯрд╢реА рдХрд╕рд╛ рддреБрд▓рдирд╛ рдХрд░рддреЛ",
    recent_expenses: "рдЕрд▓реАрдХрдбреАрд▓ рдЦрд░реНрдЪ",
    latest_transactions: "рддреБрдордЪреЗ рдирд╡реАрдирддрдо рд╡реНрдпрд╡рд╣рд╛рд░",
    update_income: "рдЙрддреНрдкрдиреНрди рдЕрдкрдбреЗрдЯ рдХрд░рд╛",
    scan_receipt: "рдкрд╛рд╡рддреА рд╕реНрдХреЕрди рдХрд░рд╛",
    add_expense: "рдЦрд░реНрдЪ рдЬреЛрдбрд╛",
    logout: "рд▓реЙрдЧрдЖрдЙрдЯ",
    profile: "рдкреНрд░реЛрдлрд╛рдЗрд▓",
    appearance: "рджрд┐рд╕рдгреЗ",
    dark_mode: "рдбрд╛рд░реНрдХ рдореЛрдб",
    language: "рднрд╛рд╖рд╛",
    reset_data: "рд╕рд░реНрд╡ рдбреЗрдЯрд╛ рд░реАрд╕реЗрдЯ рдХрд░рд╛",
    save: "рдЬрддрди рдХрд░рд╛",
    cancel: "рд░рджреНрдж рдХрд░рд╛",
    amount: "рд░рдХреНрдХрдо",
    date: "рддрд╛рд░реАрдЦ",
    category: "рд╢реНрд░реЗрдгреА",
    description: "рд╡рд░реНрдгрди",
    add: "рдЬреЛрдбрд╛",
    edit: "рд╕рдВрдкрд╛рджрд┐рдд рдХрд░рд╛",
    delete: "рд╣рдЯрд╡рд╛",
    confirm: "рдкреБрд╖реНрдЯреА рдХрд░рд╛",
    success: "рдпрд╢",
    error: "рддреНрд░реБрдЯреА",
    loading: "рд▓реЛрдб рд╣реЛрдд рдЖрд╣реЗ",
    no_data: "рдХреЛрдгрддрд╛рд╣реА рдбреЗрдЯрд╛ рдЙрдкрд▓рдмреНрдз рдирд╛рд╣реА",
    search: "рд╢реЛрдз",
    filter: "рдлрд┐рд▓реНрдЯрд░",
    sort: "рдХреНрд░рдорд╡рд╛рд░реА рд▓рд╛рд╡рд╛",
    ascending: "рдЪрдврддреНрдпрд╛ рдХреНрд░рдорд╛рдиреЗ",
    descending: "рдЙрддрд░рддреНрдпрд╛ рдХреНрд░рдорд╛рдиреЗ",
    total: "рдПрдХреВрдг",
    average: "рд╕рд░рд╛рд╕рд░реА",
    minimum: "рдХрд┐рдорд╛рди",
    maximum: "рдХрдорд╛рд▓",
    today: "рдЖрдЬ",
    yesterday: "рдХрд╛рд▓",
    this_week: "рдпрд╛ рдЖрдард╡рдбреНрдпрд╛рдд",
    last_week: "рдЧреЗрд▓реНрдпрд╛ рдЖрдард╡рдбреНрдпрд╛рдд",
    this_month: "рдпрд╛ рдорд╣рд┐рдиреНрдпрд╛рдд",
    last_month: "рдЧреЗрд▓реНрдпрд╛ рдорд╣рд┐рдиреНрдпрд╛рдд",
    this_year: "рдпрд╛ рд╡рд░реНрд╖реА",
    last_year: "рдЧреЗрд▓реНрдпрд╛ рд╡рд░реНрд╖реА",
    custom_range: "рд╕рд╛рдиреБрдХреВрд▓ рд╢реНрд░реЗрдгреА",
    apply: "рд▓рд╛рдЧреВ рдХрд░рд╛",
    reset: "рд░реАрд╕реЗрдЯ рдХрд░рд╛",
    close: "рдмрдВрдж рдХрд░рд╛",
    open: "рдЙрдШрдбрд╛",
    next: "рдкреБрдвреАрд▓",
    previous: "рдорд╛рдЧреАрд▓",
    first: "рдкрд╣рд┐рд▓реЗ",
    last: "рд╢реЗрд╡рдЯрдЪреЗ",
    page: "рдкреГрд╖реНрда",
    of: "рдкреИрдХреА",
    items_per_page: "рдкреНрд░рддрд┐ рдкреГрд╖реНрда рдЖрдпрдЯрдо",
    showing: "рджрд░реНрд╢рд╡рдд рдЖрд╣реЗ",
    to: "рддреЗ",
    entries: "рдиреЛрдВрджреА",
    all: "рд╕рд░реНрд╡",
    none: "рдХрд╛рд╣реАрд╣реА рдирд╛рд╣реА",
    select_all: "рд╕рд░реНрд╡ рдирд┐рд╡рдбрд╛",
    select_none: "рдХрд╛рд╣реАрд╣реА рдирд┐рд╡рдбреВ рдирдХрд╛",
    select: "рдирд┐рд╡рдбрд╛",
    selected: "рдирд┐рд╡рдбрд▓реЗрд▓реЗ",
    clear: "рд╕рд╛рдл рдХрд░рд╛",
    clear_all: "рд╕рд░реНрд╡ рд╕рд╛рдл рдХрд░рд╛",
    clear_selection: "рдирд┐рд╡рдб рд╕рд╛рдл рдХрд░рд╛",
    emotion_tracking: "рднрд╛рд╡рдирд╛ рдЯреНрд░реЕрдХрд┐рдВрдЧ",
    how_you_feel: "рдЖрдЬ рддреБрдореНрд╣рд╛рд▓рд╛ рддреБрдордЪреНрдпрд╛ рд╡рд┐рддреНрддрд╛рдмрджреНрджрд▓ рдХрд╕реЗ рд╡рд╛рдЯрддреЗ?",
    emotion_history: "рднрд╛рд╡рдирд╛ рдЗрддрд┐рд╣рд╛рд╕",
    emotion_insights_title: "рднрд╛рд╡рдирд┐рдХ рдЕрдВрддрд░реНрджреГрд╖реНрдЯреА",
    emotion_insights_description: "рддреБрдордЪреНрдпрд╛ рдЖрд░реНрдерд┐рдХ рднрд╛рд╡рдирд╛ рдЯреНрд░реЕрдХ рдХрд░рд╛ рдЖрдгрд┐ рдЕрдВрддрд░реНрджреГрд╖реНрдЯреА рдорд┐рд│рд╡рд╛",
    happy: "рдЖрдирдВрджреА",
    sad: "рджреБрдГрдЦреА",
    anxious: "рдЪрд┐рдВрддрд╛рдЧреНрд░рд╕реНрдд",
    confident: "рдЖрддреНрдорд╡рд┐рд╢реНрд╡рд╛рд╕реА",
    confused: "рдЧреЛрдВрдзрд│рд▓реЗрд▓реЗ",
    stressed: "рддрдгрд╛рд╡рдЧреНрд░рд╕реНрдд",
    excited: "рдЙрддреНрд╕рд╛рд╣рд┐рдд",
    neutral: "рддрдЯрд╕реНрде",
    // Add more translations as needed
  },
  ta: {
    dashboard: "роЯро╛ро╖рпНрокрпЛро░рпНроЯрпБ",
    expenses: "роЪрпЖро▓ро╡рпБроХро│рпН",
    goals: "роЗро▓роХрпНроХрпБроХро│рпН",
    challenges: "роЪро╡ро╛ро▓рпНроХро│рпН",
    settings: "роЕроорпИрокрпНрокрпБроХро│рпН",
    finbot: "роГрокро┐ройрпНрокрпЛроЯрпН",
    emotion_insights: "роЙрогро░рпНроЪрпНроЪро┐ роирпБрогрпНрогро▒ро┐ро╡рпБроХро│рпН",
    welcome: "ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН",
    track_finances: "роЙроЩрпНроХро│рпН роиро┐родро┐ропрпИроХрпН роХрогрпНроХро╛рогро┐родрпНродрпБ роЙроЩрпНроХро│рпН рокроЯрпНроЬрпЖроЯрпНроЯрпИ роиро┐ро░рпНро╡роХро┐роХрпНроХро╡рпБроорпН",
    income: "ро╡ро░рпБрооро╛ройроорпН",
    expenses_label: "роЪрпЖро▓ро╡рпБроХро│рпН",
    balance: "роЗро░рпБрокрпНрокрпБ",
    overview: "роХрогрпНрогрпЛроЯрпНроЯроорпН",
    charts: "ро╡ро┐ро│роХрпНроХрокрпНрокроЯроЩрпНроХро│рпН",
    recent: "роЪроорпАрокродрпНродро┐роп роЪрпЖро▓ро╡рпБроХро│рпН",
    accounts: "роХрогроХрпНроХрпБроХро│рпН",
    // Add more translations as needed
  },
  te: {
    dashboard: "р░бр░╛р░╖р▒НтАМр░мр▒Лр░░р▒Нр░бр▒Н",
    expenses: "р░Цр░░р▒Нр░Ър▒Бр░▓р▒Б",
    goals: "р░▓р░Хр▒Нр░╖р▒Нр░пр░╛р░▓р▒Б",
    challenges: "р░╕р░╡р░╛р░│р▒Нр░▓р▒Б",
    settings: "р░╕р▒Жр░Яр▒Нр░Яр░┐р░Вр░Чр▒НтАМр░▓р▒Б",
    finbot: "р░лр░┐р░ир▒НтАМр░мр░╛р░Яр▒Н",
    emotion_insights: "р░нр░╛р░╡р▒Лр░жр▒Нр░╡р▒Зр░Ч р░Ер░Вр░др░░р▒Нр░жр▒Гр░╖р▒Нр░Яр▒Бр░▓р▒Б",
    welcome: "р░╕р▒Нр░╡р░╛р░Чр░др░В",
    track_finances: "р░ор▒А р░Жр░░р▒Нр░ер░┐р░Х р░╕р▒Нр░ер░┐р░др░┐р░ир░┐ р░Яр▒Нр░░р░╛р░Хр▒Н р░Ър▒Зр░пр░Вр░бр░┐ р░ор░░р░┐р░пр▒Б р░ор▒А р░мр░бр▒Нр░Ьр▒Жр░Яр▒НтАМр░ир▒Б р░ир░┐р░░р▒Нр░╡р░╣р░┐р░Вр░Ър░Вр░бр░┐",
    income: "р░Жр░жр░╛р░пр░В",
    expenses_label: "р░Цр░░р▒Нр░Ър▒Бр░▓р▒Б",
    balance: "р░мр▒Нр░пр░╛р░▓р▒Жр░ир▒Нр░╕р▒Н",
    overview: "р░Ер░╡р░▓р▒Лр░Хр░ир░В",
    charts: "р░Ър░╛р░░р▒Нр░Яр▒НтАМр░▓р▒Б",
    recent: "р░Зр░Яр▒Ар░╡р░▓р░┐ р░Цр░░р▒Нр░Ър▒Бр░▓р▒Б",
    accounts: "р░Цр░╛р░др░╛р░▓р▒Б",
    // Add more translations as needed
  },
  kn: {
    dashboard: "р▓бр│Нр▓пр▓╛р▓╢р│НтАМр▓мр│Лр▓░р│Нр▓бр│Н",
    expenses: "р▓╡р│Жр▓Ър│Нр▓Ър▓Чр▓│р│Б",
    goals: "р▓Чр│Бр▓░р▓┐р▓Чр▓│р│Б",
    challenges: "р▓╕р▓╡р▓╛р▓▓р│Бр▓Чр▓│р│Б",
    settings: "р▓╕р│Жр▓Яр│Нр▓Яр▓┐р▓Вр▓Чр│НтАМр▓Чр▓│р│Б",
    finbot: "р▓лр▓┐р▓ир│НтАМр▓мр▓╛р▓Яр│Н",
    emotion_insights: "р▓нр▓╛р▓╡р▓ир▓╛р▓др│Нр▓ор▓Х р▓Тр▓│р▓ир│Лр▓Яр▓Чр▓│р│Б",
    welcome: "р▓╕р│Нр▓╡р▓╛р▓Чр▓д",
    track_finances: "р▓ир▓┐р▓ор│Нр▓о р▓╣р▓гр▓Хр▓╛р▓╕р▓ир│Нр▓ир│Б р▓Яр│Нр▓░р│Нр▓пр▓╛р▓Хр│Н р▓ор▓╛р▓бр▓┐ р▓ор▓др│Нр▓др│Б р▓ир▓┐р▓ор│Нр▓о р▓мр▓Ьр│Жр▓Яр│Н р▓ир▓┐р▓░р│Нр▓╡р▓╣р▓┐р▓╕р▓┐",
    income: "р▓Жр▓жр▓╛р▓п",
    expenses_label: "р▓╡р│Жр▓Ър│Нр▓Ър▓Чр▓│р│Б",
    balance: "р▓мр│Нр▓пр▓╛р▓▓р│Жр▓ир│Нр▓╕р│Н",
    overview: "р▓Ер▓╡р▓▓р│Лр▓Хр▓и",
    charts: "р▓Ър▓╛р▓░р│Нр▓Яр│НтАМр▓Чр▓│р│Б",
    recent: "р▓Зр▓др│Нр▓др│Ар▓Ър▓┐р▓и р▓╡р│Жр▓Ър│Нр▓Ър▓Чр▓│р│Б",
    accounts: "р▓Цр▓╛р▓др│Жр▓Чр▓│р│Б",
    // Add more translations as needed
  },
  bn: {
    dashboard: "ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржб",
    expenses: "ржЦрж░ржЪ",
    goals: "рж▓ржХрзНрж╖рзНржп",
    challenges: "ржЪрзНржпрж╛рж▓рзЗржЮрзНржЬ",
    settings: "рж╕рзЗржЯрж┐ржВрж╕",
    finbot: "ржлрж┐ржиржмржЯ",
    emotion_insights: "ржЖржмрзЗржЧ ржЕржирзНрждрж░рзНржжрзГрж╖рзНржЯрж┐",
    welcome: "рж╕рзНржмрж╛ржЧрждржо",
    track_finances: "ржЖржкржирж╛рж░ ржЕрж░рзНрже ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рзБржи ржПржмржВ ржЖржкржирж╛рж░ ржмрж╛ржЬрзЗржЯ ржкрж░рж┐ржЪрж╛рж▓ржирж╛ ржХрж░рзБржи",
    income: "ржЖржпрж╝",
    expenses_label: "ржЦрж░ржЪ",
    balance: "ржмрзНржпрж╛рж▓рзЗржирзНрж╕",
    overview: "ржУржнрж╛рж░ржнрж┐ржЙ",
    charts: "ржЪрж╛рж░рзНржЯ",
    recent: "рж╕рж╛ржорзНржкрзНрж░рждрж┐ржХ ржЦрж░ржЪ",
    accounts: "ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ",
    // Add more translations as needed
  },
}

interface LanguageContextType {
  currentLanguage: LanguageOption
  setLanguage: (language: LanguageOption) => void
  translate: (key: string) => string
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined)

export function LanguageProvider({ children }: { children: React.ReactNode }) {
  const { user, updateUser } = useAuth()
  const [currentLanguage, setCurrentLanguage] = useState<LanguageOption>(languages[0])

  useEffect(() => {
    // Set language based on user preference
    if (user?.language) {
      const userLanguage = languages.find((lang) => lang.code === user.language)
      if (userLanguage) {
        setCurrentLanguage(userLanguage)
      }
    }
  }, [user])

  const setLanguage = (language: LanguageOption) => {
    setCurrentLanguage(language)
    if (user) {
      updateUser({ language: language.code })
    }
  }

  const translate = (key: string): string => {
    const langDict = translations[currentLanguage.code]
    return langDict[key] || key
  }

  return (
    <LanguageContext.Provider value={{ currentLanguage, setLanguage, translate }}>{children}</LanguageContext.Provider>
  )
}

export function useLanguage() {
  const context = useContext(LanguageContext)
  if (context === undefined) {
    throw new Error("useLanguage must be used within a LanguageProvider")
  }
  return context
}

export const useTranslation = useLanguage
